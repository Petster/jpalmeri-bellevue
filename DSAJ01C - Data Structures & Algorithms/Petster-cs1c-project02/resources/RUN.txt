-----------------------------------------------------
--------------------Shopping Bag---------------------
-----------------------------------------------------
Test file: resources/groceries.txt
budget: 100

NOTES: Verify that if the budget is >= shoppingList sum
        return the entire shoppingList subset
-----------------------------------------------------
The list of groceries has 8 items.
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
100

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 0 ms : 572600 ns
Purchased grocery prices are:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]
Done with ShoppingBag.
-----------------------------------------------------
-----------------------------------------------------
Test file: resources/groceries.txt
budget: 20

NOTES: Verify that the algorithm can find a SubsetSum of the budget
-----------------------------------------------------
The list of groceries has 8 items.
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
20

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 0 ms : 695300 ns
Purchased grocery prices are:
[2.5, 11.5, 6.0]
Done with ShoppingBag.
-----------------------------------------------------
-----------------------------------------------------
Test file: resources/groceries.txt
budget: 26.2

NOTES: Verify that if the algorithm can find a SubsetSum that is closest to the budget
-----------------------------------------------------
The list of groceries has 8 items.
Groceries wanted:
[2.5, 4.0, 11.5, 7.0, 15.0, 4.0, 6.0, 8.0]

Enter your budget:
26.2

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 1 ms : 108300 ns
Purchased grocery prices are:
[4.0, 7.0, 15.0]
Done with ShoppingBag.
-----------------------------------------------------
-----------------------------------------------------
Test file: resources/testcase1.txt
budget: 66

NOTES: Verify that if the budget is >= shoppingList sum
        return the entire shoppingList subset
-----------------------------------------------------
The list of groceries has 10 items.
Groceries wanted:
[3.0, 2.5, 5.75, 3.5, 2.75, 4.25, 6.0, 9.5, 2.25, 3.67]

Enter your budget:
66

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 0 ms : 656400 ns
Purchased grocery prices are:
[3.0, 2.5, 5.75, 3.5, 2.75, 4.25, 6.0, 9.5, 2.25, 3.67]
Done with ShoppingBag.
-----------------------------------------------------
-----------------------------------------------------
Test file: resources/testcase1.txt
budget: 20.67

NOTES: Verify that the algorithm can find a SubsetSum of the budget
-----------------------------------------------------
The list of groceries has 10 items.
Groceries wanted:
[3.0, 2.5, 5.75, 3.5, 2.75, 4.25, 6.0, 9.5, 2.25, 3.67]

Enter your budget:
20.67

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 1 ms : 134300 ns
Purchased grocery prices are:
[2.5, 5.75, 2.75, 6.0, 3.67]
Done with ShoppingBag.
-----------------------------------------------------
-----------------------------------------------------
Test file: resources/testcase1.txt
budget: 13.85

NOTES: Verify that if the algorithm can find a SubsetSum that is closest to the budget
-----------------------------------------------------
The list of groceries has 10 items.
Groceries wanted:
[3.0, 2.5, 5.75, 3.5, 2.75, 4.25, 6.0, 9.5, 2.25, 3.67]

Enter your budget:
13.85

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 1 ms : 518100 ns
Purchased grocery prices are:
[3.5, 4.25, 6.0]
Done with ShoppingBag.
-----------------------------------------------------
-----------------------------------------------------
Test file: resources/testcase2.txt
budget: 88

NOTES: Verify that if the budget is >= shoppingList sum
               return the entire shoppingList subset
-----------------------------------------------------
The list of groceries has 8 items.
Groceries wanted:
[-2.5, 3.75, 12.0, -1.0, 5.5, 0.5, 20.0, -8.25]

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 0 ms : 609500 ns
Purchased grocery prices are:
[-2.5, 3.75, 12.0, -1.0, 5.5, 0.5, 20.0, -8.25]
Done with ShoppingBag.
-----------------------------------------------------
-----------------------------------------------------
Test file: resources/testcase2.txt
budget: -7

NOTES: Verify that the algorithm can find a SubsetSum of the budget
-----------------------------------------------------
The list of groceries has 8 items.
Groceries wanted:
[-2.5, 3.75, 12.0, -1.0, 5.5, 0.5, 20.0, -8.25]

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 0 ms : 767100 ns
Purchased grocery prices are:
[-2.5, 3.75, -8.25]
Done with ShoppingBag.





-----------------------------------------------------
----------------Foothill Tunes Store-----------------
-----------------------------------------------------
playlist duration: 5000

NOTES: Verify that the algorithm can find a SubsetSum of the duration
-----------------------------------------------------
Welcome! We have over 59600 in FoothillTunes store!

Enter the duration of your play list:
5000

Algorithm Elapsed Time: 0 hrs : 0 mins : 0 sec : 603 ms : 638500 ns
Songs in play list:
[I Love The Night, 0:4:30, Blue Oyster Cult, classic pop and rock
, Me 262, 0:8:9, Blue Oyster Cult, classic pop and rock
, Don't Fear The Reaper, 0:6:5, Blue Oyster Cult, classic pop and rock
, E.T.I. (Extra Terrestrial Intelligence), 0:3:47, Blue Oyster Cult, classic pop and rock
, Godzilla, 0:7:50, Blue Oyster Cult, classic pop and rock
, Dominenance And Submission, 0:5:50, Blue Oyster Cult, classic pop and rock
, Workshop Of The Telescopes, 0:4:2, Blue Oyster Cult, classic pop and rock
, Screams, 0:3:10, Blue Oyster Cult, classic pop and rock
, Shadows - Original, 0:0:25, Blue Oyster Cult, classic pop and rock
, Spray That Scumbag - Original, 0:1:44, Blue Oyster Cult, classic pop and rock
, Remodeling - Original, 0:2:14, Blue Oyster Cult, classic pop and rock
, Demon's Kiss - Original, 0:3:53, Blue Oyster Cult, classic pop and rock
, Out Of Stadion - Original, 0:1:22, Blue Oyster Cult, classic pop and rock
, True Confessions, 0:2:58, Blue Oyster Cult, classic pop and rock
, The Revenge Of Vera Gemini, 0:3:51, Blue Oyster Cult, classic pop and rock
, Morning Final, 0:4:15, Blue Oyster Cult, classic pop and rock
, (Don't Fear) The Reaper, 0:5:8, Blue Oyster Cult, classic pop and rock
, Debbie Denise, 0:4:11, Blue Oyster Cult, classic pop and rock
, Dance The Night Away, 0:2:39, Blue Oyster Cult, classic pop and rock
, Screams, 0:3:10, Blue Oyster Cult, classic pop and rock
, Mes Dames Sarat, 0:4:7, Blue Oyster Cult, classic pop and rock
]
Done with FoothillTunesStore.
-----------------------------------------------------
-----------------------------------------------------
playlist duration: 15,000,000

NOTES: Verify that if the duration is >= songList sum
             return the entire songList subset
-----------------------------------------------------
Output is too big to paste, but the totalDuration of songList is 14,892,082
so my initial check of
    double totalDuration = 0;
    for (SongEntry song : songList) {
       totalDuration += song.getDuration();
    }

    if (duration >= totalDuration) {
       return songList;
    }
does return the songList
